generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model saber_college {
    id                   BigInt                 @id @default(autoincrement())
    name                 String
    municipality_id      BigInt?
    saber_municipality   saber_municipality?    @relation(fields: [municipality_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    saber_collegestudent saber_collegestudent[]
}

model saber_collegestudent {
    id                          BigInt        @id @default(autoincrement())
    genre                       String        @db.VarChar(20)
    MOD_QUANTITATIVE_REASONING  Int
    MOD_WRITTEN_COMMUNICATION   Int
    MOD_CRITICAL_READING        Int
    MOD_ENGLISH                 Int
    MOD_CITIZENSHIP_COMPETENCES Int
    college_id                  BigInt
    period_id                   BigInt
    saber_college               saber_college @relation(fields: [college_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    saber_period                saber_period  @relation(fields: [period_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model saber_department {
    id                 BigInt               @id @default(autoincrement())
    name               String               @db.VarChar(255)
    saber_municipality saber_municipality[]
}

model saber_highschool {
    id                      BigInt                    @id @default(autoincrement())
    name                    String
    municipality_id         BigInt?
    saber_municipality      saber_municipality?       @relation(fields: [municipality_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    saber_highschoolstudent saber_highschoolstudent[]

    @@index([municipality_id])
}

model saber_highschoolstudent {
    id                      BigInt           @id @default(autoincrement())
    genre                   String           @db.VarChar(20)
    PUNT_ENGLISH            Int
    PUNT_MATHEMATICS        Int
    PUNT_SOCIAL_CITIZENSHIP Int
    PUNT_NATURAL_SCIENCES   Int
    PUNT_CRITICAL_READING   Int
    PUNT_GLOBAL             Int
    highschool_id           BigInt
    period_id               BigInt
    saber_highschool        saber_highschool @relation(fields: [highschool_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    saber_period            saber_period     @relation(fields: [period_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model saber_municipality {
    id               BigInt             @id @default(autoincrement())
    name             String             @db.VarChar(255)
    department_id    BigInt?
    saber_college    saber_college[]
    saber_highschool saber_highschool[]
    saber_department saber_department?  @relation(fields: [department_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model saber_period {
    id                      BigInt                    @id @default(autoincrement())
    label                   String                    @db.VarChar(32)
    saber_collegestudent    saber_collegestudent[]
    saber_highschoolstudent saber_highschoolstudent[]
}

model user_account {
    id                BigInt    @id @default(autoincrement())
    provider          String    @db.VarChar(255)
    providerAccountId String    @db.VarChar(255)
    user_id           BigInt
    user_user         user_user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

    @@unique([provider, providerAccountId])
}

model user_user {
    id              BigInt         @id @default(autoincrement())
    email           String         @unique @db.VarChar(255)
    hashed_password String         @db.VarChar(255)
    name            String?        @db.VarChar(255)
    created_at      DateTime       @db.Timestamptz(6)
    updated_at      DateTime       @db.Date
    user_account    user_account[]
}
